# Use Docker file from https://hub.docker.com/r/runmymind/docker-android-sdk
# Last docker plugin version can be found here:
# https://github.com/buildkite-plugins/docker-buildkite-plugin/releases

# Build debug version of the RiotX application, from the develop branch and the features branches

steps:
  - label: "Assemble GPlay Debug version"
    agents:
      # We use a medium sized instance instead of the normal small ones because
      # gradle build is long
      queue: "medium"
    commands:
      - "./gradlew clean lintGplayRelease assembleGplayDebug --stacktrace"
    artifact_paths:
      - "vector/build/outputs/apk/gplay/debug/*.apk"
    branches: "!master"
    plugins:
      - docker#v3.1.0:
          image: "runmymind/docker-android-sdk"

  - label: "Assemble FDroid Debug version"
    agents:
      # We use a medium sized instance instead of the normal small ones because
      # gradle build is long
      queue: "medium"
    commands:
      - "./gradlew clean lintFdroidRelease assembleFdroidDebug --stacktrace"
    artifact_paths:
      - "vector/build/outputs/apk/fdroid/debug/*.apk"
    branches: "!master"
    plugins:
      - docker#v3.1.0:
          image: "runmymind/docker-android-sdk"

  - label: "Build Google Play unsigned APK"
    agents:
      # We use a medium sized instance instead of the normal small ones because
      # gradle build is long
      queue: "medium"
    commands:
      - "./gradlew clean assembleGplayRelease --stacktrace"
    artifact_paths:
      - "vector/build/outputs/apk/gplay/release/*.apk"
    branches: "master"
    plugins:
      - docker#v3.1.0:
          image: "runmymind/docker-android-sdk"

  # Code quality

  - label: "Code quality"
    command: "./tools/check/check_code_quality.sh"
